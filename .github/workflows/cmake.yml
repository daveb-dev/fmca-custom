name: CMake

on:
  push:
    branches: [ "daved-dev/cmake-action" ]
  pull_request:
    branches: [ "daved-dev/cmake-action" ]
   # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:   
    



env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug


jobs:
  build-and-test:

    name: ${{ matrix.toolchain }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        toolchain:
          - linux-gcc
          - macos-clang
          - windows-msvc

        configuration:
          - Debug

        include:
          - toolchain: linux-gcc
            os: ubuntu-latest
            compiler: gcc

          - toolchain: macos-clang
            os: macos-latest
            compiler: clang

          - toolchain: windows-msvc
            os: windows-latest
            compiler: msvc

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: Load python3
      uses: actions/setup-python@v4
      with:
          python-version: '3.9' 
   
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest numpy 
        #scipy matplotlib
    - name: Seek Python Header
      run: |
           python3-config --includes  
           export CPPFLAGS=$(python3-config --includes)
           export PYTHON_INC=$(for i in $(echo ${CPPFLAGS} | sed 's/-I/ /g'); do echo $i; done | head -n 1)
           echo ${PYTHON_INC}
           find ${PYTHON_INC} -name 'Python.h'
    - name: Use cmake
      run: cmake --versio
    - name: Configure (${{ matrix.configuration }})
      run: cmake -S . -Bbuild -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} -DCMAKE_CXXFLAGS=-I${PYTHON_INC} 

    - name: Build with ${{ matrix.compiler }}
      run: cmake --build build 

    - name: Test
      working-directory: build
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
      run: ctest -C ${{ matrix.configuration }}

