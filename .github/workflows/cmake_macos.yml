name: CMake MacOS

on:
  push:
    branches: [ "daveb-dev-patch-1" ]
  pull_request:
    branches: [ "daveb-dev-patch-1" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:   

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  mac-os-build:
    name: macOS Homebrew install and test
    strategy:
      matrix:
        os: [macos-12, macos-11]
        toolchain:
           - macos-clang
        include:
           - toolchain: macos-clang
             os: macos-12, macos-11
             compiler: clang
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      # Some of these dependencies (e.g. python@3.10) are already installed in the GH action
      # runner but included here for completeness
      - name: Install Homebrew dependencies
        run: |
          brew install cmake ninja open-mpi pkg-config pugixml python@3.10 
          brew list --versions
      # This 'activates' Python 3.10 from Homebrew
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest numpy 
        #scipy matplotlib
      - name: Seek Python Header
        run: |
           python3-config --includes  
           export CPPFLAGS=$(python3-config --includes)
           export PYTHON_INC=$(for i in $(echo ${CPPFLAGS} | sed 's/-I/ /g'); do echo $i; done | head -n 1)
           echo ${PYTHON_INC}
           find ${PYTHON_INC} -name 'Python.h'
           export CXXFLAGS="-I${PYTHON_INC}"
      - name: Use cmake
        run: cmake --version
      - name: Configure (${{ matrix.configuration }})
        run: cmake -S . -Bbuild -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} 

      - name: Build with ${{ matrix.compiler }}
        run: cmake --build build 
